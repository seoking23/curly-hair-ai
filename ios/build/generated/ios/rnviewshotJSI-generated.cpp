/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleCpp.js
 */

#include "rnviewshotJSI.h"

namespace facebook::react {

static jsi::Value __hostFunction_NativeRNViewShotCxxSpecJSI_releaseCapture(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeRNViewShotCxxSpecJSI *>(&turboModule)->releaseCapture(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeRNViewShotCxxSpecJSI_captureRef(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeRNViewShotCxxSpecJSI *>(&turboModule)->captureRef(
    rt,
    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asNumber()),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeRNViewShotCxxSpecJSI_captureScreen(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeRNViewShotCxxSpecJSI *>(&turboModule)->captureScreen(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}

NativeRNViewShotCxxSpecJSI::NativeRNViewShotCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("RNViewShot", jsInvoker) {
  methodMap_["releaseCapture"] = MethodMetadata {1, __hostFunction_NativeRNViewShotCxxSpecJSI_releaseCapture};
  methodMap_["captureRef"] = MethodMetadata {2, __hostFunction_NativeRNViewShotCxxSpecJSI_captureRef};
  methodMap_["captureScreen"] = MethodMetadata {1, __hostFunction_NativeRNViewShotCxxSpecJSI_captureScreen};
}


} // namespace facebook::react
